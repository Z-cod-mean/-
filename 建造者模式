#ifndef _BUILDER_H_
#define _BUILDER_H_

#include "example.h"
#include "animation.h"

namespace _BuilderPattern
{

    //建造一个鸡的类（要实现的类）
	class Chicken
	{
	public:
		Chicken()
		{
            //在构造函数中设置/接收三个部分的动画循环，动画帧刷新,位置信息
			//请继续建设
		}

		~Chicken() = default;

        //把武器身体头三个部位的图集传给动画器的加帧
		void set_weapon(Atlas* atlas)
		{
            //请继续建设
		}

		void set_body(Atlas* atlas)
		{
			//请继续建设
		}

		void set_hat(Atlas* atlas)
		{
			//请继续建设
		}

		void on_update(float delta)
		{
			//请继续建设
		}

		void on_render(SDL_Renderer* renderer)
		{
			//请继续建设
		}

	private:

        //把动画器分别分配给三个部位
		Animation animation_weapon;
		Animation animation_body;
		Animation animation_hat;

	};

    //建造器基类类
	class Builder
	{
	public:
        //制定三个部位的接口默认=0/将鸡类变为抽象类接口让后续类完成

		//请继续建设

	protected:
        //供子类使用的三个部位的图集
		Atlas atlas_weapon;
		Atlas atlas_body;
		Atlas atlas_hat;

	};

    //预设的伊丽莎白鸡，继承于建造器
	class ElizabethChickenBuilder : public Builder
	{
	public:
        //使用atlas里的加载器完成伊丽莎白鸡
        //武器为叉子,白色的鸡,跟皇冠（加上清除上一个模型的功能）
		void init_weapon() override
		{
			//请继续建设
		}

		void init_body() override
		{
			//请继续建设
		}

		void init_hat() override
		{
			//请继续建设
		}

        //将以上选择的物品的图集传给鸡类中的对应建造函数，实例化渲染他们
        （记得返回鸡的信息回去）
		Chicken* build() override
		{
			Chicken* chicken = new Chicken();
            //请继续建设
			
		}

	};

    //预设绿帽吮指原味鸡lol，跟伊丽莎白鸡一样
	class GreenHatOriginalRecipeChickenBuilder : public Builder
	{
	public:
		void init_weapon() override
		{
			//请继续建设
		}

		void init_body() override
		{
			//请继续建设
		}

		void init_hat() override
		{
			//请继续建设
		}

		Chicken* build() override
		{
			Chicken* chicken = new Chicken();
            //请继续建设
			
		}

	};
    //自定义外观不传入或设置任何物品
	class CustomChickenBuilder : public Builder
	{
	public:
		//请继续建设

	};
}

//建造模式接口
class BuilderPattern : public Example
{
public:
	BuilderPattern(SDL_Renderer* renderer);
	~BuilderPattern();

	void on_update(float delta) override;
	void on_render(SDL_Renderer* renderer) override;

private:
	SDL_Texture* texture_target = nullptr;
	_BuilderPattern::Chicken* chicken = nullptr;
    //设置三个实现类的实例分别是伊丽莎白鸡跟绿帽鸡以及自定义的预设暴露给管理器
	_BuilderPattern::CustomChickenBuilder custom_chicken_builder;
	_BuilderPattern::ElizabethChickenBuilder elizabeth_chicken_builder;
	_BuilderPattern::GreenHatOriginalRecipeChickenBuilder green_hat_original_recipe_chicken_builder;

};

#endif // !_BUILDER_H_
